CREATE TABLE default.ReplacingMergeTreeTest \
( \
 id UInt8, \
 age UInt8, \
 name String \
) ENGINE = ReplacingMergeTree(age) \
PARTITION BY id \
ORDER BY id

create index _orders_buyer_shop_id
    on orders (buyer_shop_id);

create index _orders_order_id
    on orders (order_id);

create index _orders_shop_id
    on orders (shop_id);

CREATE TABLE event_stream
(
ts DateTime,
tag String,
cnt Int64
) \
ENGINE = Kafka('bogon2:9092,bogon:9092,bogon3:9092', 'events', 'group1', 'JSONEachRow');



//创建fafka 表
CREATE TABLE dwd_kafka_order( \
orderId               Int64           , \
parentOrderId        Int64           , \
orderType             Int32           , \
status                 Int32           , \
buyerStatus           Int32           , \
sellerType            Int32           , \
orderPlatform         String          , \
orderSource           String          , \
totalMoney            decimal(12, 2)  , \
freightMoney          decimal(10, 2)  , \
discountMoney         decimal(12, 2)  , \
cutMoney              decimal(16, 4)  , \
otherFee              decimal(10, 2)  , \
roundDown             decimal(10, 2)  , \
actuallyPaymentMoney decimal(12, 2)  , \
buyerId               Int64           , \
buyerName             String          , \
buyerShopId          Int64           , \
buyerShopName        String          , \
sellerId              Int64           , \
sellerName            String          , \
shopId                Int64           , \
shopName              String          , \
option               String          , \
paid                   Int32           , \
paymentSource         String          , \
paymentTime           String        , \
refund                 Int32           , \
exchange               Int8            , \
invoice                Int32           , \
buyerMemo             String          , \
sellerMemo            String          , \
isChangePrice        Int32           , \
changePriceUser      Int64           , \
changePriceTime      String        , \
settleFlag            Int32           , \
evaluation             String          , \
createTime            String        , \
modifyTime            String        , \
createUser            Int64           , \
modifyUser            Int64           , \
deposit                decimal(10, 2)  , \
retainage              decimal(10, 2)  , \
retainageOrderId     Int64           , \
presellId             Int64           , \
presellPayType       Int32           , \
orderCredit           Int32           , \
yn                     Int32           , \
manageUserId         Int64           , \
manageUsername        String          , \
buyerManageUserId   Int64           , \
buyerManageUsername  String          , \
purchaseDate          String        , \
warehouseCode         Int32          , \
warehouseName         String          , \
reason                 String          , \
auditTime             String        , \
auditUserId          Int32           , \
auditUsername         String          , \
remark                 String          , \
sellerOrgCode        String          , \
sellerOrgParentCode String          , \
buyerOrgCode         String          , \
buyerOrgParentCode  String          , \
deliveryType          Int32           , \
printPrice            Int32           , \
consignment            Int32           , \
storeComplete         Int32           , \
balanceAmount         decimal(14, 2)  , \
balanceFlag           Int32           , \
issueFlag             Int32           , \
selfPickFlag         Int32           , \
expectReceiveTime    String        , \
deliveryRemark        String          , \
subMchId              String, \
orderCancelTime         String            comment '订单取消时间', \
distributionFlag         Int32            comment '分销订单标识 0：普通订单 1：分销订单', \
disShopId               Int64             comment '分销店铺ID', \
disUserId               Int64             comment '分销用户ID', \
disSubMchId             String            comment '分销二级商户号', \
totalCommission          decimal(14, 2)    ,   \
chainStoreId            Int64             comment '连锁门店id', \
groupLeaderShopId      Int64              comment '团长店铺ID', \
groupLeaderUserId      Int64              comment '团长用户ID', \
groupLeaderMchId        String            comment '团长商户号', \
groupPurchaseCommission decimal(14, 2)    comment '团购佣金', \
groupLeaderRemark       String            comment '团长备注', \
groupPurchaseCode       String            comment '团购活动编码', \
needInvoiceFlag         Int32             comment '团购订单是否开票：1，否；2，是；', \
eventType              String, \
hour              String, \
day              String, \
oldNewUser       String \
) \
ENGINE = Kafka('bogon2:9092,bogon:9092,bogon3:9092', 'dwd_order', 'group', 'JSONEachRow');

//创建本地表
CREATE TABLE dwd_order on cluster bip_ck_cluster ( \
orderId               Int64           , \
parentOrderId        Int64           , \
orderType             Int32           , \
status                 Int32           , \
buyerStatus           Int32           , \
sellerType            Int32           , \
orderPlatform         String          , \
orderSource           String          , \
totalMoney            decimal(12, 2)  , \
freightMoney          decimal(10, 2)  , \
discountMoney         decimal(12, 2)  , \
cutMoney              decimal(16, 4)  , \
otherFee              decimal(10, 2)  , \
roundDown             decimal(10, 2)  , \
actuallyPaymentMoney decimal(12, 2)  , \
buyerId               Int64           , \
buyerName             String          , \
buyerShopId          Int64           , \
buyerShopName        String          , \
sellerId              Int64           , \
sellerName            String          , \
shopId                Int64           , \
shopName              String          , \
option               String          , \
paid                   Int32           , \
paymentSource         String          , \
paymentTime           String        , \
refund                 Int32           , \
exchange               Int8            , \
invoice                Int32           , \
buyerMemo             String          , \
sellerMemo            String          , \
isChangePrice        Int32           , \
changePriceUser      Int64           , \
changePriceTime      String        , \
settleFlag            Int32           , \
evaluation             String          , \
createTime            String        , \
modifyTime            String        , \
createUser            Int64           , \
modifyUser            Int64           , \
deposit                decimal(10, 2)  , \
retainage              decimal(10, 2)  , \
retainageOrderId     Int64           , \
presellId             Int64           , \
presellPayType       Int32           , \
orderCredit           Int32           , \
yn                     Int32           , \
manageUserId         Int64           , \
manageUsername        String          , \
buyerManageUserId   Int64           , \
buyerManageUsername  String          , \
purchaseDate          String        , \
warehouseCode         Int32          , \
warehouseName         String          , \
reason                 String          , \
auditTime             String        , \
auditUserId          Int32           , \
auditUsername         String          , \
remark                 String          , \
sellerOrgCode        String          , \
sellerOrgParentCode String          , \
buyerOrgCode         String          , \
buyerOrgParentCode  String          , \
deliveryType          Int32           , \
printPrice            Int32           , \
consignment            Int32           , \
storeComplete         Int32           , \
balanceAmount         decimal(14, 2)  , \
balanceFlag           Int32           , \
issueFlag             Int32           , \
selfPickFlag         Int32           , \
expectReceiveTime    String        , \
deliveryRemark        String          , \
subMchId              String, \
eventType              String, \
hour              String, \
day              String, \
oldNewUser       String \
) \
ENGINE = ReplacingMergeTree(orderId)\
primary key orderId \
PARTITION BY (day,hour) \
ORDER BY (orderId,day,hour) \
SETTINGS index_granularity = 8192;

ALTER TABLE dwd_order_all ADD COLUMN  orderCancelTime String AFTER subMchId
ALTER TABLE dwd_order_all ADD COLUMN  distributionFlag  String AFTER orderCancelTime
ALTER TABLE dwd_order_all ADD COLUMN  disShopId  String AFTER distributionFlag
ALTER TABLE dwd_order_all ADD COLUMN  disUserId  String AFTER disShopId
ALTER TABLE dwd_order_all ADD COLUMN  disSubMchId  String AFTER disUserId
ALTER TABLE dwd_order_all ADD COLUMN  totalCommission  String AFTER disSubMchId
ALTER TABLE dwd_order_all ADD COLUMN  chainStoreId  String AFTER totalCommission
ALTER TABLE dwd_order_all ADD COLUMN  groupLeaderShopId  String AFTER chainStoreId
ALTER TABLE dwd_order_all ADD COLUMN  groupLeaderUserId  String AFTER groupLeaderShopId
ALTER TABLE dwd_order_all ADD COLUMN  groupLeaderMchId  String AFTER groupLeaderUserId
ALTER TABLE dwd_order_all ADD COLUMN  groupPurchaseCommission  String AFTER groupLeaderMchId
ALTER TABLE dwd_order_all ADD COLUMN  groupLeaderRemark  String AFTER groupPurchaseCommission
ALTER TABLE dwd_order_all ADD COLUMN  groupPurchaseCode  String AFTER groupLeaderRemark
ALTER TABLE dwd_order_all ADD COLUMN  needInvoiceFlag  String AFTER groupPurchaseCode
//增加字段
ALTER TABLE dwd_order_all on cluster bip_ck_cluster ADD COLUMN oldNewUser String

//创建分布式表
create table dwd_order_all on cluster bip_ck_cluster \
( \
orderId               Int64           , \
parentOrderId        Int64           , \
orderType             Int32           , \
status                 Int32           , \
buyerStatus           Int32           , \
sellerType            Int32           , \
orderPlatform         String          , \
orderSource           String          , \
totalMoney            decimal(12, 2)  , \
freightMoney          decimal(10, 2)  , \
discountMoney         decimal(12, 2)  , \
cutMoney              decimal(16, 4)  , \
otherFee              decimal(10, 2)  , \
roundDown             decimal(10, 2)  , \
actuallyPaymentMoney decimal(12, 2)  , \
buyerId               Int64           , \
buyerName             String          , \
buyerShopId          Int64           , \
buyerShopName        String          , \
sellerId              Int64           , \
sellerName            String          , \
shopId                Int64           , \
shopName              String          , \
option               String          , \
paid                   Int32           , \
paymentSource         String          , \
paymentTime           String        , \
refund                 Int32           , \
exchange               Int8            , \
invoice                Int32           , \
buyerMemo             String          , \
sellerMemo            String          , \
isChangePrice        Int32           , \
changePriceUser      Int64           , \
changePriceTime      String        , \
settleFlag            Int32           , \
evaluation             String          , \
createTime            String        , \
modifyTime            String        , \
createUser            Int64           , \
modifyUser            Int64           , \
deposit                decimal(10, 2)  , \
retainage              decimal(10, 2)  , \
retainageOrderId     Int64           , \
presellId             Int64           , \
presellPayType       Int32           , \
orderCredit           Int32           , \
yn                     Int32           , \
manageUserId         Int64           , \
manageUsername        String          , \
buyerManageUserId   Int64           , \
buyerManageUsername  String          , \
purchaseDate          String        , \
warehouseCode         Int32          , \
warehouseName         String          , \
reason                 String          , \
auditTime             String        , \
auditUserId          Int32           , \
auditUsername         String          , \
remark                 String          , \
sellerOrgCode        String          , \
sellerOrgParentCode String          , \
buyerOrgCode         String          , \
buyerOrgParentCode  String          , \
deliveryType          Int32           , \
printPrice            Int32           , \
consignment            Int32           , \
storeComplete         Int32           , \
balanceAmount         decimal(14, 2)  , \
balanceFlag           Int32           , \
issueFlag             Int32           , \
selfPickFlag         Int32           , \
expectReceiveTime    String        , \
deliveryRemark        String          , \
subMchId              String, \
eventType              String, \
hour              String, \
day              String, \
oldNewUser       String \
) \
engine = Distributed(bip_ck_cluster,default, dwd_order,hiveHash(orderId)) ;

//创建视图
CREATE MATERIALIZED VIEW dwd_order_view TO dwd_order_all \
AS SELECT * FROM dwd_kafka_order;

//创建 曝光流量 kafka 表
CREATE TABLE dwd_kafka_page_log( \
timeIn String, \
domain String, \
url String, \
title String,  \
referrer String, \
sh Int64, \
sw Int64, \
cd Int64, \
lang String, \
shopId String,  \
ip String,  \
loginToken String,  \
skuId String,  \
itemId String,  \
event String,  \
userId String,  \
province String, \
city String,  \
hour String,  \
day String,  \
itemName String \
) \
ENGINE = Kafka('bogon2:9092,bogon:9092,bogon3:9092', 'dwd_page_log', 'buryDot', 'JSONEachRow');
//创建本地表
CREATE TABLE dwd_page_log_cluster on cluster bip_ck_cluster ( \
timeIn String, \
domain String, \
url String, \
title String,  \
referrer String, \
sh Int64, \
sw Int64, \
cd Int64, \
lang String, \
shopId String,  \
ip String,  \
loginToken String,  \
skuId String,  \
itemId String,  \
event String,  \
userId String,  \
province String, \
city String,  \
hour String,  \
day String  \
) \
ENGINE = MergeTree()\
PARTITION BY (day,hour) \
ORDER BY (day,hour) \
SETTINGS index_granularity = 8192;
//创建分布式表
create table dwd_page_log_all on cluster bip_ck_cluster \
( \
timeIn String, \
domain String, \
url String, \
title String,  \
referrer String, \
sh Int64, \
sw Int64, \
cd Int64, \
lang String, \
shopId String,  \
ip String,  \
loginToken String,  \
skuId String,  \
itemId String,  \
event String,  \
userId String,  \
province String, \
city String,  \
hour String,  \
day String  \
) \
engine = Distributed(bip_ck_cluster,default, dwd_page_log_cluster,hiveHash(shopId)) ;


CREATE MATERIALIZED VIEW dwd_page_log_view TO dwd_page_log_all \
AS SELECT * FROM dwd_kafka_page_log;
--------------------------------------------------------
//创建 流量明细 kafka 表
CREATE TABLE dwd_kafka_order_detail( \
id Int64, \
orderId Int64, \
itemId Int64, \
itemName String, \
cid Int64, \
brandId Int64, \
skuId Int64, \
num decimal(24, 8), \
costPrice decimal(16, 4), \
itemOriginal_price decimal(10, 2), \
paymentTotalMoney decimal(10, 2), \
paymentPrice decimal(10, 2), \
cutPrice String, \
cutPriceTotal String, \
refund String, \
purchaseNum String, \
dividedBalance String, \
warehouseCode String, \
disCommissionRate String, \
disCommissionAmount String, \
shopId Int64, \
hour String,  \
day String  \
) \
ENGINE = Kafka('bogon2:9092,bogon:9092,bogon3:9092', 'dwd_order_detail', 'buryDot', 'JSONEachRow');


//创建本地表
CREATE TABLE dwd_order_detail_cluster on cluster bip_ck_cluster ( \
id Int64, \
orderId Int64, \
itemId Int64, \
itemName String, \
cid Int64, \
brandId Int64, \
skuId Int64, \
num decimal(24, 8), \
costPrice decimal(16, 4), \
itemOriginal_price decimal(10, 2), \
paymentTotalMoney decimal(10, 2), \
paymentPrice decimal(10, 2), \
cutPrice String, \
cutPriceTotal String, \
refund String, \
purchaseNum String, \
dividedBalance String, \
warehouseCode String, \
disCommissionRate String, \
disCommissionAmount String, \
shopId Int64, \
hour String,  \
day String  \
) \
ENGINE = MergeTree()\
PARTITION BY (day,hour) \
ORDER BY (day,hour) \
SETTINGS index_granularity = 8192;

//创建分布式表
create table dwd_order_detail_all on cluster bip_ck_cluster \
( \
id Int64, \
orderId Int64, \
itemId Int64, \
itemName String, \
cid Int64, \
brandId Int64, \
skuId Int64, \
num decimal(24, 8), \
costPrice decimal(16, 4), \
itemOriginal_price decimal(10, 2), \
paymentTotalMoney decimal(10, 2), \
paymentPrice decimal(10, 2), \
cutPrice String, \
cutPriceTotal String, \
refund String, \
purchaseNum String, \
dividedBalance String, \
warehouseCode String, \
disCommissionRate String, \
disCommissionAmount String, \
shopId Int64, \
hour String,  \
day String  \
) \
engine = Distributed(bip_ck_cluster,default, dwd_order_detail_cluster,hiveHash(shopId)) ;


CREATE MATERIALIZED VIEW dwd_order_detail_view TO dwd_order_detail_all \
AS SELECT * FROM dwd_kafka_order_detail;



//创建 退款 kafka 表
CREATE TABLE dwd_kafka_refund_apply( \
id Int64, \
orderId Int64, \
shopId String, \
orderStatus Int64, \
refundStatus Int64, \
refundReason String, \
questionDescription String, \
refundTotalMoney Double, \
updateTime Int64, \
hour String, \
day String \
) \
ENGINE = Kafka('bogon2:9092,bogon:9092,bogon3:9092', 'dwd_refund_apply', 'buryDot', 'JSONEachRow');

CREATE TABLE dwd_refund_apply_cluster on cluster bip_ck_cluster ( \
id Int64, \
orderId Int64, \
shopId String, \
orderStatus Int64, \
refundStatus Int64, \
refundReason String, \
questionDescription String, \
refundTotalMoney Double, \
updateTime Int64, \
hour String, \
day String \
) \
ENGINE = MergeTree()\
PARTITION BY (day,hour) \
ORDER BY (day,hour) \
SETTINGS index_granularity = 8192;

//创建分布式表
create table dwd_refund_apply_all on cluster bip_ck_cluster \
( \
id Int64, \
orderId Int64, \
shopId String, \
orderStatus Int64, \
refundStatus Int64, \
refundReason String, \
questionDescription String, \
refundTotalMoney Double, \
updateTime Int64, \
hour String, \
day String \
) \
engine = Distributed(bip_ck_cluster,default, dwd_refund_apply_cluster,hiveHash(id)) ;


CREATE MATERIALIZED VIEW dwd_refund_apply_view TO dwd_refund_apply_all \
AS SELECT * FROM dwd_kafka_refund_apply;




//创建出库 kafka 表
CREATE TABLE dwd_outbound_bill_detail( \
id Int64, \
types Int64, \
orderId Int64, \
shopId Int64, \
orderDetailId Int64, \
cid Int64, \
brandId Int64, \
itemId Int64, \
skuId Int64, \
orderNum Double, \
price Double, \
buyerShopId String, \
buyerShopName String, \
createTime String, \
hour String, \
day String \
) \
ENGINE = Kafka('bogon2:9092,bogon:9092,bogon3:9092', 'dwd_outbound_bill_detail', 'buryDot', 'JSONEachRow');

CREATE TABLE dwd_outbound_bill_detail_cluster on cluster bip_ck_cluster ( \
id Int64, \
types Int64, \
orderId Int64, \
shopId Int64, \
orderDetailId Int64, \
cid Int64, \
brandId Int64, \
itemId Int64, \
skuId Int64, \
orderNum Double, \
price Double, \
buyerShopId String, \
buyerShopName String, \
createTime String, \
hour String, \
day String \
) \
ENGINE = ReplacingMergeTree(id)\
primary key id \
PARTITION BY (day,hour) \
ORDER BY (id,day,hour) \
SETTINGS index_granularity = 8192;

create table dwd_outbound_bill_detail_all on cluster bip_ck_cluster \
( \
id Int64, \
types Int64, \
orderId Int64, \
shopId Int64, \
orderDetailId Int64, \
cid Int64, \
brandId Int64, \
itemId Int64, \
skuId Int64, \
orderNum Double, \
price Double, \
buyerShopId String, \
buyerShopName String, \
createTime String, \
hour String, \
day String \
) \
engine = Distributed(bip_ck_cluster,default, dwd_outbound_bill_detail_cluster,hiveHash(id)) ;

CREATE MATERIALIZED VIEW dwd_outbound_bill_detail_view TO dwd_outbound_bill_detail_all \
AS SELECT * FROM dwd_outbound_bill_detail;

//--------------------------------------------------------------------




CREATE TABLE off_line_dws.dws_shop_deal_info on cluster bip_ck_cluster (
shop_id Int64,
buyer_id Int64,
sku_id Int64,
item_name String,
pick_id Int64,
pick_name String,
order_type String,
sale_order_number Int64, --下单笔数
sale_pick_order_number Int64, --自提点订单数
payment_num Double,  --支付件数
payment_succeed_money Double, -- 支付成功金额
payment_succeed_number Int64, --支付成功数据(成交单量)
income_money Double, -- 收入金额
payment_money Double --下单金额
)
ENGINE = MergeTree()
PARTITION BY (day,hour)
ORDER BY (day,hour)
SETTINGS index_granularity = 8192;